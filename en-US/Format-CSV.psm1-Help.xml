<?xml version="1.0" encoding="utf-8" ?>
<helpItems xmlns="http://msh" schema="maml">
	<!--Edited with: SAPIEN PowerShell HelpWriter 2016 v1.1.20-->
	<!--Generated by: SAPIEN PowerShell HelpWriter 2016 v1.1.20-->
	<!--
		Module: 		Format-CSV
		Version:		0.0
	-->
	<!--All Commands-->
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Format-CSV</command:name>
			<maml:description>
				<maml:para>Formats a .csv file into an Excel file.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para/>
			</maml:copyright>
			<command:verb>Format</command:verb>
			<command:noun>CSV</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>All data will be output to one tab, with appropraite column headings.
The tab will be formatted as a table for easy sorting.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Format-CSV</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
					<maml:name>InFile</maml:name>
					<maml:description>
						<maml:para>[ValidatePattern(&apos;.+\.csv&apos;)]
[String] Path to the .csv file which will be formatted.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
					<dev:defaultValue/>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>OutDir</maml:name>
					<maml:description>
						<maml:para>[ValidateNotNullOrEmpty()]
[string] File Path where formatted document should be saved.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Format-CSV</maml:name>
				<command:parameter required="false" pipelineinput="false" globbing="false" position="named">
					<maml:name>Show</maml:name>
					<maml:description>
						<maml:para>[Switch] If on, the resultant file will be opened when execution is complete.</maml:para>
					</maml:description>
					<command:parameterValue required="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" pipelineinput="false" globbing="false" position="named">
					<maml:name>SaveName</maml:name>
					<maml:description>
						<maml:para>BaseName of the file that will be saved.
Default value: &apos;Formatted-Csv&apos;</maml:para>
					</maml:description>
					<command:parameterValue required="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="">
				<maml:name>InFile</maml:name>
				<maml:description>
					<maml:para>[ValidatePattern(&apos;.+\.csv&apos;)]
[String] Path to the .csv file which will be formatted.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>OutDir</maml:name>
				<maml:description>
					<maml:para>[ValidateNotNullOrEmpty()]
[string] File Path where formatted document should be saved.</maml:para>
				</maml:description>
				<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue/>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>SaveName</maml:name>
				<maml:description>
					<maml:para>BaseName of the file that will be saved.
Default value: &#39;Formatted-Csv&#39;</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>Formatted-Csv</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Show</maml:name>
				<maml:description>
					<maml:para>[Switch] If on, the resultant file will be opened when execution is complete.</maml:para>
				</maml:description>
				<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Format-CSV -InFile &apos;C:\Temp\myData.csv&apos; -OutDir &apos;C:\Temp&apos;</dev:code>
				<dev:remarks>
					<maml:para>This will format &apos;C:\Temp\myData.csv&apos; and save it to &apos;C:\Temp\Formatted-Csv.xlsx&apos;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>fcsv &apos;C:\Temp\myData.csv&apos; &apos;C:\Temp&apos;</dev:code>
				<dev:remarks>
					<maml:para>This has the same result as Example 1.  fcsv is the alias for Format-CSV;
-InFile and -OutDir are positional paramters.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt; </maml:para>
				</maml:introduction>
				<dev:code>Format-CSV -InFile &apos;C:\Temp\myData.csv&apos; -OutDir &apos;C:\Temp&apos; -SaveName &apos;newFile&apos; -Show</dev:code>
				<dev:remarks>
					<maml:para>This will format &apos;C:\Temp\myData.csv&apos; and save it to &apos;C:\Temp\newFile.xlsx&apos;.
The File will be opened when complete.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<!--Generated by: SAPIEN PowerShell HelpWriter 2016 v1.1.20-->
</helpItems>